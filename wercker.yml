box: golang:1.9
no-response-timeout: 60
command-timeout: 60

test:
  base-path: "/go/src/github.com/oracle/mysql-operator"
  steps:
    - script:
      name: test
      code: make test

build:
  base-path: "/go/src/github.com/oracle/mysql-operator"
  steps:
    - script:
      name: build binaries
      code: make build

    - script:
      name: copy build artifacts
      code: |
        cp -R bin ${WERCKER_OUTPUT_DIR}/
        cp -R dist ${WERCKER_OUTPUT_DIR}/

    - script:
      name: copy test artifacts
      code: |
        cp -R Makefile ${WERCKER_OUTPUT_DIR}/
        cp -R cmd ${WERCKER_OUTPUT_DIR}/
        cp -R pkg ${WERCKER_OUTPUT_DIR}/
        cp -R test ${WERCKER_OUTPUT_DIR}/
        cp -R vendor ${WERCKER_OUTPUT_DIR}/
        cp -R hack ${WERCKER_OUTPUT_DIR}/
        cp -R mysql-operator ${WERCKER_OUTPUT_DIR}/
        cp -R .git ${WERCKER_OUTPUT_DIR}/
        cp -R docker ${WERCKER_OUTPUT_DIR}/

push-operator-image:
  steps:
    - internal/docker-build:
      dockerfile: docker/mysql-operator/Dockerfile
      image-name: wercker-build-mysql-operator

    - script:
      name: Set environment variables
      code: |
        export VERSION=$(cat dist/version.txt)
        echo "Pushing mysql-operator version ${VERSION}"

    - internal/docker-push:
      image-name: wercker-build-mysql-operator
      registry: https://iad.ocir.io/v2
      repository: iad.ocir.io/oracle/mysql-operator
      tag: $VERSION
      username: $OCIRUSERNAME
      password: $OCIRPASSWORD

    - internal/docker-push:
      image-name: wercker-build-mysql-operator
      registry: https://lhr.ocir.io/v2
      repository: lhr.ocir.io/oracle/mysql-operator
      tag: $VERSION
      username: $OCIRUSERNAME
      password: $OCIRPASSWORD

    - internal/docker-push:
      image-name: wercker-build-mysql-operator
      registry: https://phx.ocir.io/v2
      repository: phx.ocir.io/oracle/mysql-operator
      tag: $VERSION
      username: $OCIRUSERNAME
      password: $OCIRPASSWORD

    - internal/docker-push:
      image-name: wercker-build-mysql-operator
      registry: https://fra.ocir.io/v2
      repository: fra.ocir.io/oracle/mysql-operator
      tag: $VERSION
      username: $OCIRUSERNAME
      password: $OCIRPASSWORD

push-agent-image:
  steps:
    - internal/docker-build:
      dockerfile: docker/mysql-agent/Dockerfile
      image-name: wercker-build-mysql-agent
      build-args: "MYSQL_USER=27"

    - script:
      name: Set environment variables
      code: |
        export VERSION=$(cat dist/version.txt)
        echo "Pushing mysql-agent version ${VERSION}"

    - internal/docker-push:
      image-name: wercker-build-mysql-agent
      registry: https://iad.ocir.io/v2
      username: $OCIRUSERNAME
      password: $OCIRPASSWORD
      repository: iad.ocir.io/oracle/mysql-agent
      tag: $VERSION

    - internal/docker-push:
      image-name: wercker-build-mysql-agent
      registry: https://lhr.ocir.io/v2
      username: $OCIRUSERNAME
      password: $OCIRPASSWORD
      repository: lhr.ocir.io/oracle/mysql-agent
      tag: $VERSION

    - internal/docker-push:
      image-name: wercker-build-mysql-agent
      registry: https://phx.ocir.io/v2
      username: $OCIRUSERNAME
      password: $OCIRPASSWORD
      repository: phx.ocir.io/oracle/mysql-agent
      tag: $VERSION

    - internal/docker-push:
      image-name: wercker-build-mysql-agent
      registry: https://fra.ocir.io/v2
      username: $OCIRUSERNAME
      password: $OCIRPASSWORD
      repository: fra.ocir.io/oracle/mysql-agent
      tag: $VERSION

e2e-test:
  base-path: "/go/src/github.com/oracle/mysql-operator"
  box:
    registry: https://iad.ocir.io/v2
    id: iad.ocir.io/oracle/mysql-operator-ci-e2e:1.1.1
  steps:
    - script:
      name: e2e default tests
      code: |
        export KUBECONFIG="/tmp/kubeconfig"
        echo -n "${KUBECONFIG_VAR}" | openssl enc -base64 -d -A > "${KUBECONFIG}"
        ginkgo \
          -nodes=5 \
          -v \
          test/e2e -- \
          --kubeconfig="${KUBECONFIG}" \
          --operator-version="$(cat dist/version.txt)" \
          --s3-access-key="${S3_ACCESS_KEY}" \
          --s3-secret-key="${S3_SECRET_KEY}" \

release:
  box:
    id: oraclelinux:7-slim
  steps:
    - script:
        name: set ENV vars
        code: |
          export VERSION=$(cat dist/version.txt)
          echo "${VERSION}"

    - github-create-release:
      token: $GITHUB_TOKEN
      tag: $VERSION
      title: $VERSION
      draft: false
